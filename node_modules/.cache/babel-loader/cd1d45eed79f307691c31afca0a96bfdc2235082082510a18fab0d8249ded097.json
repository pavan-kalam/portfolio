{"ast":null,"code":"var _jsxFileName = \"/Users/pavankalam/Desktop/gemini_cli_portfolio/portfolio-website/src/components/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FaBrain, FaEthereum, FaRobot, FaShieldAlt } from 'react-icons/fa';\nimport VideoPlayer, { VideoPlaceholder, EnhancedVideoPlayer } from './VideoPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  id: 'deepfake',\n  title: 'Deep Fake Detection Using CNN',\n  description: 'Developed a convolution Neural Network (CNN) based project to identify AI-generated or edited images, enhancing digital content authenticity. Focused on image processing and deep learning techniques for robust detection.',\n  icon: /*#__PURE__*/_jsxDEV(FaBrain, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 11\n  }, this),\n  background: 'linear-gradient(135deg, #6a11cb 0%, #2575fc 100%)',\n  image: '/project_images/deepfake_cnn.png',\n  summary: 'This project implements a deep learning model for detecting deepfake images using TensorFlow and Keras. The model is trained to classify images as either real or fake, utilizing a dataset of fake and real images. Implemented using Google Colab for faster training.',\n  videoConfig: {\n    hasMarkdown: true,\n    features: ['CNN Architecture', 'TensorFlow/Keras', 'Real-time Detection', 'Web Interface'],\n    duration: 30\n  }\n}, {\n  id: 'cybersecurity',\n  title: 'Real-Time Threat Intelligence System',\n  description: 'Developed a cybersecurity project focused on real-time threat intelligence for organization security. Utilized OSINT tools to monitor threats and integrated Machine Learning models to accelerate the threat mitigation process.',\n  icon: /*#__PURE__*/_jsxDEV(FaShieldAlt, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, this),\n  background: 'linear-gradient(135deg, #8360c3 0%, #2ebf91 100%)',\n  image: '/project_images/security_project.png',\n  summary: 'A cybersecurity project focused on real-time threat intelligence, integrating OSINT tools like VirusTotal and HIBP, and leveraging LLMs for automated risk scoring, aligning with NIST CSF 2.0.',\n  videoConfig: {\n    hasMarkdown: true,\n    features: ['OSINT Integration', 'NIST Framework', 'AI Risk Assessment', 'Real-time Monitoring'],\n    duration: 35\n  }\n}, {\n  id: 'blockchain',\n  title: 'Blockchain-Based Real Estate Management System',\n  description: 'Designed and implemented a secure real estate management system leverage blockchain technology. Enabled all real estate transactions to be conducted using Ethereum coins, ensuring transparency and immutability.',\n  icon: /*#__PURE__*/_jsxDEV(FaEthereum, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 11\n  }, this),\n  background: 'linear-gradient(135deg, #00c6fb 0%, #005bea 100%)',\n  image: '/project_images/blockchain.png',\n  summary: 'A secure real estate management system leveraging blockchain technology. All transactions are conducted using Ethereum coins, ensuring transparency and immutability.',\n  videoConfig: {\n    hasMarkdown: false,\n    features: ['Blockchain Technology', 'Ethereum Integration', 'Smart Contracts', 'Transaction Security'],\n    duration: 25\n  }\n}, {\n  id: 'ai_agent',\n  title: 'AI Call Agent With RAG Strategy',\n  description: 'Created an AI Call Agent capable of interacting with callers naturally. Implemented a Retrieval-Augmented Generation (RAG) strategy within an Agentic AI system to process queries and identify important calls, forwarding them automatically to the user when necessary.',\n  icon: /*#__PURE__*/_jsxDEV(FaRobot, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 11\n  }, this),\n  background: 'linear-gradient(135deg, #ff7e5f 0%, #feb47b 100%)',\n  image: 'https://via.placeholder.com/300x200/000000/FFFFFF?text=AI+Agent+Architecture',\n  summary: 'An AI Call Agent designed for natural interaction, utilizing a Retrieval-Augmented Generation (RAG) strategy to process queries and identify important calls for automatic forwarding.',\n  videoConfig: {\n    hasMarkdown: false,\n    features: ['RAG Strategy', 'Natural Language Processing', 'Call Automation', 'AI Agent Framework'],\n    duration: 30\n  }\n}];\nfunction Projects() {\n  _s();\n  const [hoveredProject, setHoveredProject] = useState(null);\n  const [videoData, setVideoData] = useState({});\n  const [videoMode, setVideoMode] = useState('placeholder'); // 'placeholder', 'generated', 'ai_generated'\n\n  // Load video data if available\n  useEffect(() => {\n    const loadVideoData = async () => {\n      try {\n        // Try to load pre-generated video data from public folder\n        const response = await fetch('/data/all_video_data.json');\n        if (response.ok) {\n          const data = await response.json();\n          setVideoData(data);\n          setVideoMode('generated');\n          console.log('✅ Loaded pre-generated video data');\n        }\n      } catch (error) {\n        console.log('No pre-generated video data found, using placeholders');\n        setVideoMode('placeholder');\n      }\n    };\n    loadVideoData();\n  }, []);\n\n  // Handle video data generation - now shows instructions instead of running script\n  const handleGenerateVideos = async () => {\n    setVideoMode('generating');\n\n    // Simulate processing and show instructions\n    setTimeout(() => {\n      alert(`📝 Video Script Generation Instructions:\n\n1. Open terminal in the portfolio-website folder\n2. Run: npm run generate-videos\n3. This will process your markdown files and create video scripts\n4. Use the generated prompts with AI video services like RunwayML or Pika Labs\n5. Place generated videos in /public/videos/ folder\n\nCheck the VIDEO_GENERATION_COMPLETE.md file for detailed instructions!`);\n      setVideoMode('placeholder');\n    }, 2000);\n  };\n  const renderProjectVisual = (project, index) => {\n    const isHovered = hoveredProject === index;\n    const projectVideoData = videoData[project.id];\n    switch (videoMode) {\n      case 'generated':\n      case 'ai_generated':\n        // Show video player with generated content\n        return /*#__PURE__*/_jsxDEV(EnhancedVideoPlayer, {\n          projectId: project.id,\n          videoSrc: (projectVideoData === null || projectVideoData === void 0 ? void 0 : projectVideoData.videoSrc) || `/videos/${project.id}_complete.mp4`,\n          posterImage: project.image,\n          isHovered: isHovered,\n          videoData: {\n            title: project.title,\n            features: project.videoConfig.features,\n            script: projectVideoData === null || projectVideoData === void 0 ? void 0 : projectVideoData.script\n          },\n          showControls: isHovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this);\n      case 'generating':\n        // Show loading state\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-generating\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generating-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Processing instructions...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this);\n      case 'placeholder':\n      default:\n        // Show enhanced placeholder with project info\n        if (project.videoConfig.hasMarkdown) {\n          return /*#__PURE__*/_jsxDEV(VideoPlaceholder, {\n            projectId: project.id,\n            title: project.title,\n            features: project.videoConfig.features\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this);\n        } else {\n          // Fallback to original image for projects without markdown\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: project.image,\n            alt: project.title,\n            className: \"project-visual\",\n            style: {\n              width: '100%',\n              height: '200px',\n              objectFit: 'cover',\n              borderRadius: '12px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this);\n        }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-controls-header\",\n        children: [videoMode === 'placeholder' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-videos-btn\",\n          onClick: handleGenerateVideos,\n          title: \"Get instructions for generating video content from project documentation\",\n          children: \"\\uD83C\\uDFAC Video Generation Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), videoMode === 'generated' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-indicator success\",\n            children: \"\\u2705\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), \"Video previews ready\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), videoMode === 'generating' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-indicator loading\",\n            children: \"\\u23F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), \"Loading instructions...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-grid\",\n      children: projects.map((project, index) => {\n        var _videoData$project$id;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card\",\n          style: {\n            background: project.background\n          },\n          onMouseEnter: () => setHoveredProject(index),\n          onMouseLeave: () => setHoveredProject(null),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-visual-container\",\n            children: renderProjectVisual(project, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card-content\",\n            children: [project.icon, /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), hoveredProject === index && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-enhanced-summary\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: project.summary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this), ((_videoData$project$id = videoData[project.id]) === null || _videoData$project$id === void 0 ? void 0 : _videoData$project$id.script) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"video-info\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"\\uD83C\\uDFAC Video: \", videoData[project.id].script.scenes.length, \" scenes,\", videoData[project.id].script.totalDuration, \"s duration\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"project-features\",\n                  children: project.videoConfig.features.slice(0, 3).map((feature, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"feature-pill\",\n                    children: feature\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDFA5 Interactive Video Previews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This portfolio features AI-generated video previews based on project documentation. Videos are created from detailed markdown files covering implementation, features, and technical achievements.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), videoMode === 'placeholder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions-highlight\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Click \\\"Video Generation Guide\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), \" for instructions on creating dynamic video content from your Deepfake Detection and Cybersecurity project documentation using AI video services!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCCB Video Generation Workflow:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Generate Scripts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), \" Run \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"npm run generate-videos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 56\n            }, this), \" to process markdown files\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Create Videos:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), \" Use generated prompts with AI services (RunwayML, Pika Labs)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Add Videos:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), \" Place generated videos in \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"/public/videos/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 72\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Experience:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), \" Hover over project cards to see videos play automatically\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"yp6az63itK76KiDnYnxGOtpFgWs=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","FaBrain","FaEthereum","FaRobot","FaShieldAlt","VideoPlayer","VideoPlaceholder","EnhancedVideoPlayer","jsxDEV","_jsxDEV","projects","id","title","description","icon","fileName","_jsxFileName","lineNumber","columnNumber","background","image","summary","videoConfig","hasMarkdown","features","duration","Projects","_s","hoveredProject","setHoveredProject","videoData","setVideoData","videoMode","setVideoMode","loadVideoData","response","fetch","ok","data","json","console","log","error","handleGenerateVideos","setTimeout","alert","renderProjectVisual","project","index","isHovered","projectVideoData","projectId","videoSrc","posterImage","script","showControls","className","children","src","alt","style","width","height","objectFit","borderRadius","onClick","map","_videoData$project$id","onMouseEnter","onMouseLeave","scenes","length","totalDuration","slice","feature","idx","_c","$RefreshReg$"],"sources":["/Users/pavankalam/Desktop/gemini_cli_portfolio/portfolio-website/src/components/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FaBrain, FaEthereum, FaRobot, FaShieldAlt } from 'react-icons/fa';\nimport VideoPlayer, { VideoPlaceholder, EnhancedVideoPlayer } from './VideoPlayer';\n\nconst projects = [\n  {\n    id: 'deepfake',\n    title: 'Deep Fake Detection Using CNN',\n    description: 'Developed a convolution Neural Network (CNN) based project to identify AI-generated or edited images, enhancing digital content authenticity. Focused on image processing and deep learning techniques for robust detection.',\n    icon: <FaBrain />,\n    background: 'linear-gradient(135deg, #6a11cb 0%, #2575fc 100%)',\n    image: '/project_images/deepfake_cnn.png',\n    summary: 'This project implements a deep learning model for detecting deepfake images using TensorFlow and Keras. The model is trained to classify images as either real or fake, utilizing a dataset of fake and real images. Implemented using Google Colab for faster training.',\n    videoConfig: {\n      hasMarkdown: true,\n      features: ['CNN Architecture', 'TensorFlow/Keras', 'Real-time Detection', 'Web Interface'],\n      duration: 30\n    }\n  },\n  {\n    id: 'cybersecurity',\n    title: 'Real-Time Threat Intelligence System',\n    description: 'Developed a cybersecurity project focused on real-time threat intelligence for organization security. Utilized OSINT tools to monitor threats and integrated Machine Learning models to accelerate the threat mitigation process.',\n    icon: <FaShieldAlt />,\n    background: 'linear-gradient(135deg, #8360c3 0%, #2ebf91 100%)',\n    image: '/project_images/security_project.png',\n    summary: 'A cybersecurity project focused on real-time threat intelligence, integrating OSINT tools like VirusTotal and HIBP, and leveraging LLMs for automated risk scoring, aligning with NIST CSF 2.0.',\n    videoConfig: {\n      hasMarkdown: true,\n      features: ['OSINT Integration', 'NIST Framework', 'AI Risk Assessment', 'Real-time Monitoring'],\n      duration: 35\n    }\n  },\n  {\n    id: 'blockchain',\n    title: 'Blockchain-Based Real Estate Management System',\n    description: 'Designed and implemented a secure real estate management system leverage blockchain technology. Enabled all real estate transactions to be conducted using Ethereum coins, ensuring transparency and immutability.',\n    icon: <FaEthereum />,\n    background: 'linear-gradient(135deg, #00c6fb 0%, #005bea 100%)',\n    image: '/project_images/blockchain.png',\n    summary: 'A secure real estate management system leveraging blockchain technology. All transactions are conducted using Ethereum coins, ensuring transparency and immutability.',\n    videoConfig: {\n      hasMarkdown: false,\n      features: ['Blockchain Technology', 'Ethereum Integration', 'Smart Contracts', 'Transaction Security'],\n      duration: 25\n    }\n  },\n  {\n    id: 'ai_agent',\n    title: 'AI Call Agent With RAG Strategy',\n    description: 'Created an AI Call Agent capable of interacting with callers naturally. Implemented a Retrieval-Augmented Generation (RAG) strategy within an Agentic AI system to process queries and identify important calls, forwarding them automatically to the user when necessary.',\n    icon: <FaRobot />,\n    background: 'linear-gradient(135deg, #ff7e5f 0%, #feb47b 100%)',\n    image: 'https://via.placeholder.com/300x200/000000/FFFFFF?text=AI+Agent+Architecture',\n    summary: 'An AI Call Agent designed for natural interaction, utilizing a Retrieval-Augmented Generation (RAG) strategy to process queries and identify important calls for automatic forwarding.',\n    videoConfig: {\n      hasMarkdown: false,\n      features: ['RAG Strategy', 'Natural Language Processing', 'Call Automation', 'AI Agent Framework'],\n      duration: 30\n    }\n  },\n];\n\nfunction Projects() {\n  const [hoveredProject, setHoveredProject] = useState(null);\n  const [videoData, setVideoData] = useState({});\n  const [videoMode, setVideoMode] = useState('placeholder'); // 'placeholder', 'generated', 'ai_generated'\n\n  // Load video data if available\n  useEffect(() => {\n    const loadVideoData = async () => {\n      try {\n        // Try to load pre-generated video data from public folder\n        const response = await fetch('/data/all_video_data.json');\n        if (response.ok) {\n          const data = await response.json();\n          setVideoData(data);\n          setVideoMode('generated');\n          console.log('✅ Loaded pre-generated video data');\n        }\n      } catch (error) {\n        console.log('No pre-generated video data found, using placeholders');\n        setVideoMode('placeholder');\n      }\n    };\n\n    loadVideoData();\n  }, []);\n\n  // Handle video data generation - now shows instructions instead of running script\n  const handleGenerateVideos = async () => {\n    setVideoMode('generating');\n    \n    // Simulate processing and show instructions\n    setTimeout(() => {\n      alert(`📝 Video Script Generation Instructions:\n\n1. Open terminal in the portfolio-website folder\n2. Run: npm run generate-videos\n3. This will process your markdown files and create video scripts\n4. Use the generated prompts with AI video services like RunwayML or Pika Labs\n5. Place generated videos in /public/videos/ folder\n\nCheck the VIDEO_GENERATION_COMPLETE.md file for detailed instructions!`);\n      \n      setVideoMode('placeholder');\n    }, 2000);\n  };\n\n  const renderProjectVisual = (project, index) => {\n    const isHovered = hoveredProject === index;\n    const projectVideoData = videoData[project.id];\n\n    switch (videoMode) {\n      case 'generated':\n      case 'ai_generated':\n        // Show video player with generated content\n        return (\n          <EnhancedVideoPlayer\n            projectId={project.id}\n            videoSrc={projectVideoData?.videoSrc || `/videos/${project.id}_complete.mp4`}\n            posterImage={project.image}\n            isHovered={isHovered}\n            videoData={{\n              title: project.title,\n              features: project.videoConfig.features,\n              script: projectVideoData?.script\n            }}\n            showControls={isHovered}\n          />\n        );\n      \n      case 'generating':\n        // Show loading state\n        return (\n          <div className=\"video-generating\">\n            <div className=\"generating-spinner\"></div>\n            <p>Processing instructions...</p>\n          </div>\n        );\n      \n      case 'placeholder':\n      default:\n        // Show enhanced placeholder with project info\n        if (project.videoConfig.hasMarkdown) {\n          return (\n            <VideoPlaceholder\n              projectId={project.id}\n              title={project.title}\n              features={project.videoConfig.features}\n            />\n          );\n        } else {\n          // Fallback to original image for projects without markdown\n          return (\n            <img \n              src={project.image} \n              alt={project.title} \n              className=\"project-visual\"\n              style={{\n                width: '100%',\n                height: '200px',\n                objectFit: 'cover',\n                borderRadius: '12px'\n              }}\n            />\n          );\n        }\n    }\n  };\n\n  return (\n    <section id=\"projects\">\n      <div className=\"projects-header\">\n        <h2>Projects</h2>\n        \n        {/* Video Generation Controls */}\n        <div className=\"video-controls-header\">\n          {videoMode === 'placeholder' && (\n            <button \n              className=\"generate-videos-btn\"\n              onClick={handleGenerateVideos}\n              title=\"Get instructions for generating video content from project documentation\"\n            >\n              🎬 Video Generation Guide\n            </button>\n          )}\n          \n          {videoMode === 'generated' && (\n            <div className=\"video-status\">\n              <span className=\"status-indicator success\">✅</span>\n              Video previews ready\n            </div>\n          )}\n          \n          {videoMode === 'generating' && (\n            <div className=\"video-status\">\n              <span className=\"status-indicator loading\">⏳</span>\n              Loading instructions...\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"projects-grid\">\n        {projects.map((project, index) => (\n          <div\n            className=\"project-card\"\n            key={index}\n            style={{ background: project.background }}\n            onMouseEnter={() => setHoveredProject(index)}\n            onMouseLeave={() => setHoveredProject(null)}\n          >\n            {/* Project Visual (Image or Video) */}\n            <div className=\"project-visual-container\">\n              {renderProjectVisual(project, index)}\n            </div>\n\n            {/* Project Content */}\n            <div className=\"project-card-content\">\n              {project.icon}\n              <h3>{project.title}</h3>\n              <p>{project.description}</p>\n              \n              {/* Enhanced hover content */}\n              {hoveredProject === index && (\n                <div className=\"project-enhanced-summary\">\n                  <div className=\"summary-content\">\n                    <p>{project.summary}</p>\n                    \n                    {/* Show video script info if available */}\n                    {videoData[project.id]?.script && (\n                      <div className=\"video-info\">\n                        <small>\n                          🎬 Video: {videoData[project.id].script.scenes.length} scenes, \n                          {videoData[project.id].script.totalDuration}s duration\n                        </small>\n                      </div>\n                    )}\n                    \n                    {/* Show key features */}\n                    <div className=\"project-features\">\n                      {project.videoConfig.features.slice(0, 3).map((feature, idx) => (\n                        <span key={idx} className=\"feature-pill\">\n                          {feature}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      \n      {/* Usage Instructions */}\n      <div className=\"video-instructions\">\n        <h3>🎥 Interactive Video Previews</h3>\n        <p>\n          This portfolio features AI-generated video previews based on project documentation. \n          Videos are created from detailed markdown files covering implementation, features, and technical achievements.\n        </p>\n        \n        {videoMode === 'placeholder' && (\n          <div className=\"instructions-highlight\">\n            <p>\n              <strong>Click \"Video Generation Guide\"</strong> for instructions on creating dynamic video content from your \n              Deepfake Detection and Cybersecurity project documentation using AI video services!\n            </p>\n          </div>\n        )}\n        \n        <div className=\"workflow-steps\">\n          <h4>📋 Video Generation Workflow:</h4>\n          <ol>\n            <li><strong>Generate Scripts:</strong> Run <code>npm run generate-videos</code> to process markdown files</li>\n            <li><strong>Create Videos:</strong> Use generated prompts with AI services (RunwayML, Pika Labs)</li>\n            <li><strong>Add Videos:</strong> Place generated videos in <code>/public/videos/</code></li>\n            <li><strong>Experience:</strong> Hover over project cards to see videos play automatically</li>\n          </ol>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}