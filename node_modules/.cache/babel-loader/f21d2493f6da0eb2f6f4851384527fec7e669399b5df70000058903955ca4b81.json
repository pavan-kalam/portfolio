{"ast":null,"code":"var _jsxFileName = \"/Users/pavankalam/Desktop/portfolio-website/src/components/MarkdownViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MarkdownViewer({\n  file,\n  onClose\n}) {\n  _s();\n  const [content, setContent] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (file) {\n      fetchMarkdownContent(file.path);\n    }\n  }, [file]);\n  const fetchMarkdownContent = async filePath => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(filePath);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch ${filePath}`);\n      }\n      const text = await response.text();\n      setContent(text);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderMarkdown = markdown => {\n    // Basic markdown rendering - convert common markdown elements to HTML\n    let html = markdown\n    // Headers\n    .replace(/^### (.*$)/gm, '<h3>$1</h3>').replace(/^## (.*$)/gm, '<h2>$1</h2>').replace(/^# (.*$)/gm, '<h1>$1</h1>')\n    // Bold and italic\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>').replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n    // Code blocks\n    .replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>').replace(/`([^`]+)`/g, '<code>$1</code>')\n    // Links\n    .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>')\n    // Line breaks\n    .replace(/\\n\\n/g, '</p><p>').replace(/\\n/g, '<br/>');\n\n    // Wrap in paragraphs\n    html = '<p>' + html + '</p>';\n\n    // Clean up empty paragraphs\n    html = html.replace(/<p><\\/p>/g, '');\n    html = html.replace(/<p><br\\/><\\/p>/g, '');\n    return html;\n  };\n  if (!file) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"markdown-viewer-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-viewer\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-viewer-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: file.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-viewer-content\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"markdown-content\",\n          dangerouslySetInnerHTML: {\n            __html: renderMarkdown(content)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(MarkdownViewer, \"PssurOO+eiQooNf7ZrAA4DC8Cko=\");\n_c = MarkdownViewer;\nexport default MarkdownViewer;\nvar _c;\n$RefreshReg$(_c, \"MarkdownViewer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MarkdownViewer","file","onClose","_s","content","setContent","loading","setLoading","error","setError","fetchMarkdownContent","path","filePath","response","fetch","ok","Error","text","err","message","renderMarkdown","markdown","html","replace","className","onClick","children","e","stopPropagation","title","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/pavankalam/Desktop/portfolio-website/src/components/MarkdownViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MarkdownViewer({ file, onClose }) {\n  const [content, setContent] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (file) {\n      fetchMarkdownContent(file.path);\n    }\n  }, [file]);\n\n  const fetchMarkdownContent = async (filePath) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(filePath);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch ${filePath}`);\n      }\n      const text = await response.text();\n      setContent(text);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderMarkdown = (markdown) => {\n    // Basic markdown rendering - convert common markdown elements to HTML\n    let html = markdown\n      // Headers\n      .replace(/^### (.*$)/gm, '<h3>$1</h3>')\n      .replace(/^## (.*$)/gm, '<h2>$1</h2>')\n      .replace(/^# (.*$)/gm, '<h1>$1</h1>')\n      // Bold and italic\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n      // Code blocks\n      .replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>')\n      .replace(/`([^`]+)`/g, '<code>$1</code>')\n      // Links\n      .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>')\n      // Line breaks\n      .replace(/\\n\\n/g, '</p><p>')\n      .replace(/\\n/g, '<br/>');\n\n    // Wrap in paragraphs\n    html = '<p>' + html + '</p>';\n    \n    // Clean up empty paragraphs\n    html = html.replace(/<p><\\/p>/g, '');\n    html = html.replace(/<p><br\\/><\\/p>/g, '');\n\n    return html;\n  };\n\n  if (!file) return null;\n\n  return (\n    <div className=\"markdown-viewer-overlay\" onClick={onClose}>\n      <div className=\"markdown-viewer\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"markdown-viewer-header\">\n          <h3>{file.title}</h3>\n          <button className=\"close-btn\" onClick={onClose}>Ã—</button>\n        </div>\n        <div className=\"markdown-viewer-content\">\n          {loading && <div className=\"loading\">Loading...</div>}\n          {error && <div className=\"error\">Error: {error}</div>}\n          {!loading && !error && (\n            <div \n              className=\"markdown-content\"\n              dangerouslySetInnerHTML={{ __html: renderMarkdown(content) }}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MarkdownViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}